name: Coding Standards and Tests

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    container:
      image: junaidbhura/wp-tests:php-7.3
    services:
      mysql:
        image: mysql:5.7.27
        env:
          MYSQL_ROOT_PASSWORD: root

    steps:
    - name: Create database
      run: |
        mysqladmin create wp_tests --user="root" --password="root" --host=mysql --protocol=tcp

    - name: Install NodeJS
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Checkout repository
      uses: actions/checkout@v1

    - name: Composer cache
      id: composer-cache
      uses: actions/cache@v1
      with:
        path: vendor
        key: composer-${{ hashFiles( 'composer.lock' ) }}

    - name: NodeJS cache
      id: node-cache
      uses: actions/cache@v1
      with:
        path: node_modules
        key: node-${{ hashFiles( 'package-lock.json' ) }}

    - name: WP cache
      id: wp-cache
      uses: actions/cache@v1
      with:
        path: web/wp
        key: wp-${{ hashFiles( 'composer.lock' ) }}

    - name: WP plugins cache
      id: wp-plugins-cache
      uses: actions/cache@v1
      with:
        path: web/wp-content/plugins
        key: wp-plugins-${{ hashFiles( 'composer.lock' ) }}

    - name: Install Composer dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: |
        composer install
        vendor/bin/phpcs --config-set installed_paths vendor/wp-coding-standards/wpcs

    - name: Install NodeJS dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: npm install

    - name: PHP Coding standards
      run: composer run lint-php

    - name: JS Coding standards
      run: npm run lint-js

    - name: CSS Coding standards
      run: npm run lint-css

    - name: Unit tests
      run: composer run test
